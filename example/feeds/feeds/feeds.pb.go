// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: example/feeds.proto

package feeds

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/anypb"
	_ "google.golang.org/protobuf/types/known/apipb"
	_ "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/fieldmaskpb"
	_ "google.golang.org/protobuf/types/known/sourcecontextpb"
	_ "google.golang.org/protobuf/types/known/structpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	_ "google.golang.org/protobuf/types/known/typepb"
	_ "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TLConstructor int32

const (
	TLConstructor_CRC32_UNKNOWN              TLConstructor = 0 //1511592262
	TLConstructor_CRC32_feedGetFeedList      TLConstructor = 1511592262
	TLConstructor_CRC32_updateFeedList       TLConstructor = 1511592263
	TLConstructor_CRC32_feedReadHistory      TLConstructor = 1511592264
	TLConstructor_CRC32_getHistoryCounter    TLConstructor = 1511592265
	TLConstructor_CRC32_feedListState        TLConstructor = 1511592266
	TLConstructor_CRC32_feedItemState        TLConstructor = 1511592267
	TLConstructor_CRC32_updateFeedListStatus TLConstructor = 1511592268
	TLConstructor_CRC32_historyCounterState  TLConstructor = 1511592269
	TLConstructor_CRC32_historyList          TLConstructor = 1511592270
	TLConstructor_CRC32_historyItem          TLConstructor = 1511592271
	TLConstructor_CRC32_responseEmpty        TLConstructor = 1511592272
)

// Enum value maps for TLConstructor.
var (
	TLConstructor_name = map[int32]string{
		0:          "CRC32_UNKNOWN",
		1511592262: "CRC32_feedGetFeedList",
		1511592263: "CRC32_updateFeedList",
		1511592264: "CRC32_feedReadHistory",
		1511592265: "CRC32_getHistoryCounter",
		1511592266: "CRC32_feedListState",
		1511592267: "CRC32_feedItemState",
		1511592268: "CRC32_updateFeedListStatus",
		1511592269: "CRC32_historyCounterState",
		1511592270: "CRC32_historyList",
		1511592271: "CRC32_historyItem",
		1511592272: "CRC32_responseEmpty",
	}
	TLConstructor_value = map[string]int32{
		"CRC32_UNKNOWN":              0,
		"CRC32_feedGetFeedList":      1511592262,
		"CRC32_updateFeedList":       1511592263,
		"CRC32_feedReadHistory":      1511592264,
		"CRC32_getHistoryCounter":    1511592265,
		"CRC32_feedListState":        1511592266,
		"CRC32_feedItemState":        1511592267,
		"CRC32_updateFeedListStatus": 1511592268,
		"CRC32_historyCounterState":  1511592269,
		"CRC32_historyList":          1511592270,
		"CRC32_historyItem":          1511592271,
		"CRC32_responseEmpty":        1511592272,
	}
)

func (x TLConstructor) Enum() *TLConstructor {
	p := new(TLConstructor)
	*p = x
	return p
}

func (x TLConstructor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TLConstructor) Descriptor() protoreflect.EnumDescriptor {
	return file_example_feeds_proto_enumTypes[0].Descriptor()
}

func (TLConstructor) Type() protoreflect.EnumType {
	return &file_example_feeds_proto_enumTypes[0]
}

func (x TLConstructor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TLConstructor.Descriptor instead.
func (TLConstructor) EnumDescriptor() ([]byte, []int) {
	return file_example_feeds_proto_rawDescGZIP(), []int{0}
}

type TLFeedGetFeedList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Constructor TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=feeds.TLConstructor" json:"constructor,omitempty"`
	UserId      int64         `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *TLFeedGetFeedList) Reset() {
	*x = TLFeedGetFeedList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_feeds_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLFeedGetFeedList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLFeedGetFeedList) ProtoMessage() {}

func (x *TLFeedGetFeedList) ProtoReflect() protoreflect.Message {
	mi := &file_example_feeds_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLFeedGetFeedList.ProtoReflect.Descriptor instead.
func (*TLFeedGetFeedList) Descriptor() ([]byte, []int) {
	return file_example_feeds_proto_rawDescGZIP(), []int{0}
}

func (x *TLFeedGetFeedList) GetConstructor() TLConstructor {
	if x != nil {
		return x.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (x *TLFeedGetFeedList) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type TLUpdateFeedList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Constructor TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=feeds.TLConstructor" json:"constructor,omitempty"`
	States      []*FeedItemState `protobuf:"bytes,2,rep,name=states,proto3" json:"states,omitempty"`
}

func (x *TLUpdateFeedList) Reset() {
	*x = TLUpdateFeedList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_feeds_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLUpdateFeedList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLUpdateFeedList) ProtoMessage() {}

func (x *TLUpdateFeedList) ProtoReflect() protoreflect.Message {
	mi := &file_example_feeds_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLUpdateFeedList.ProtoReflect.Descriptor instead.
func (*TLUpdateFeedList) Descriptor() ([]byte, []int) {
	return file_example_feeds_proto_rawDescGZIP(), []int{1}
}

func (x *TLUpdateFeedList) GetConstructor() TLConstructor {
	if x != nil {
		return x.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (x *TLUpdateFeedList) GetStates() []*FeedItemState {
	if x != nil {
		return x.States
	}
	return nil
}

type TLFeedReadHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Constructor TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=feeds.TLConstructor" json:"constructor,omitempty"`
	UserId      int64         `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *TLFeedReadHistory) Reset() {
	*x = TLFeedReadHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_feeds_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLFeedReadHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLFeedReadHistory) ProtoMessage() {}

func (x *TLFeedReadHistory) ProtoReflect() protoreflect.Message {
	mi := &file_example_feeds_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLFeedReadHistory.ProtoReflect.Descriptor instead.
func (*TLFeedReadHistory) Descriptor() ([]byte, []int) {
	return file_example_feeds_proto_rawDescGZIP(), []int{2}
}

func (x *TLFeedReadHistory) GetConstructor() TLConstructor {
	if x != nil {
		return x.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (x *TLFeedReadHistory) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type TLGetHistoryCounter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Constructor TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=feeds.TLConstructor" json:"constructor,omitempty"`
	UserId      int64         `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *TLGetHistoryCounter) Reset() {
	*x = TLGetHistoryCounter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_feeds_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLGetHistoryCounter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLGetHistoryCounter) ProtoMessage() {}

func (x *TLGetHistoryCounter) ProtoReflect() protoreflect.Message {
	mi := &file_example_feeds_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLGetHistoryCounter.ProtoReflect.Descriptor instead.
func (*TLGetHistoryCounter) Descriptor() ([]byte, []int) {
	return file_example_feeds_proto_rawDescGZIP(), []int{3}
}

func (x *TLGetHistoryCounter) GetConstructor() TLConstructor {
	if x != nil {
		return x.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (x *TLGetHistoryCounter) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type FeedListState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Constructor TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=feeds.TLConstructor" json:"constructor,omitempty"`
	States      []*FeedItemState `protobuf:"bytes,2,rep,name=states,proto3" json:"states,omitempty"`
}

func (x *FeedListState) Reset() {
	*x = FeedListState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_feeds_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedListState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedListState) ProtoMessage() {}

func (x *FeedListState) ProtoReflect() protoreflect.Message {
	mi := &file_example_feeds_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedListState.ProtoReflect.Descriptor instead.
func (*FeedListState) Descriptor() ([]byte, []int) {
	return file_example_feeds_proto_rawDescGZIP(), []int{4}
}

func (x *FeedListState) GetConstructor() TLConstructor {
	if x != nil {
		return x.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (x *FeedListState) GetStates() []*FeedItemState {
	if x != nil {
		return x.States
	}
	return nil
}

type FeedItemState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PredicateName string        `protobuf:"bytes,1,opt,name=predicate_name,json=predicateName,proto3" json:"predicate_name,omitempty"`
	Constructor   TLConstructor `protobuf:"varint,2,opt,name=constructor,proto3,enum=feeds.TLConstructor" json:"constructor,omitempty"`
	ChatId        int64         `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	PeerType      int32         `protobuf:"varint,4,opt,name=peer_type,json=peerType,proto3" json:"peer_type,omitempty"`
	State         bool          `protobuf:"varint,5,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *FeedItemState) Reset() {
	*x = FeedItemState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_feeds_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedItemState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedItemState) ProtoMessage() {}

func (x *FeedItemState) ProtoReflect() protoreflect.Message {
	mi := &file_example_feeds_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedItemState.ProtoReflect.Descriptor instead.
func (*FeedItemState) Descriptor() ([]byte, []int) {
	return file_example_feeds_proto_rawDescGZIP(), []int{5}
}

func (x *FeedItemState) GetPredicateName() string {
	if x != nil {
		return x.PredicateName
	}
	return ""
}

func (x *FeedItemState) GetConstructor() TLConstructor {
	if x != nil {
		return x.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (x *FeedItemState) GetChatId() int64 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *FeedItemState) GetPeerType() int32 {
	if x != nil {
		return x.PeerType
	}
	return 0
}

func (x *FeedItemState) GetState() bool {
	if x != nil {
		return x.State
	}
	return false
}

type UpdateFeedListStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Constructor TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=feeds.TLConstructor" json:"constructor,omitempty"`
	Status      bool          `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Error       string        `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *UpdateFeedListStatus) Reset() {
	*x = UpdateFeedListStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_feeds_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFeedListStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFeedListStatus) ProtoMessage() {}

func (x *UpdateFeedListStatus) ProtoReflect() protoreflect.Message {
	mi := &file_example_feeds_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFeedListStatus.ProtoReflect.Descriptor instead.
func (*UpdateFeedListStatus) Descriptor() ([]byte, []int) {
	return file_example_feeds_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateFeedListStatus) GetConstructor() TLConstructor {
	if x != nil {
		return x.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (x *UpdateFeedListStatus) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *UpdateFeedListStatus) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type HistoryCounterState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Constructor TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=feeds.TLConstructor" json:"constructor,omitempty"`
	Count       int32         `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *HistoryCounterState) Reset() {
	*x = HistoryCounterState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_feeds_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryCounterState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryCounterState) ProtoMessage() {}

func (x *HistoryCounterState) ProtoReflect() protoreflect.Message {
	mi := &file_example_feeds_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryCounterState.ProtoReflect.Descriptor instead.
func (*HistoryCounterState) Descriptor() ([]byte, []int) {
	return file_example_feeds_proto_rawDescGZIP(), []int{7}
}

func (x *HistoryCounterState) GetConstructor() TLConstructor {
	if x != nil {
		return x.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (x *HistoryCounterState) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type HistoryList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Constructor  TLConstructor  `protobuf:"varint,1,opt,name=constructor,proto3,enum=feeds.TLConstructor" json:"constructor,omitempty"`
	HistoryItems []*HistoryItem `protobuf:"bytes,2,rep,name=history_items,json=historyItems,proto3" json:"history_items,omitempty"`
}

func (x *HistoryList) Reset() {
	*x = HistoryList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_feeds_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryList) ProtoMessage() {}

func (x *HistoryList) ProtoReflect() protoreflect.Message {
	mi := &file_example_feeds_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryList.ProtoReflect.Descriptor instead.
func (*HistoryList) Descriptor() ([]byte, []int) {
	return file_example_feeds_proto_rawDescGZIP(), []int{8}
}

func (x *HistoryList) GetConstructor() TLConstructor {
	if x != nil {
		return x.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (x *HistoryList) GetHistoryItems() []*HistoryItem {
	if x != nil {
		return x.HistoryItems
	}
	return nil
}

type HistoryItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PredicateName string        `protobuf:"bytes,1,opt,name=predicate_name,json=predicateName,proto3" json:"predicate_name,omitempty"`
	Constructor   TLConstructor `protobuf:"varint,2,opt,name=constructor,proto3,enum=feeds.TLConstructor" json:"constructor,omitempty"`
}

func (x *HistoryItem) Reset() {
	*x = HistoryItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_feeds_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryItem) ProtoMessage() {}

func (x *HistoryItem) ProtoReflect() protoreflect.Message {
	mi := &file_example_feeds_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryItem.ProtoReflect.Descriptor instead.
func (*HistoryItem) Descriptor() ([]byte, []int) {
	return file_example_feeds_proto_rawDescGZIP(), []int{9}
}

func (x *HistoryItem) GetPredicateName() string {
	if x != nil {
		return x.PredicateName
	}
	return ""
}

func (x *HistoryItem) GetConstructor() TLConstructor {
	if x != nil {
		return x.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

type ResponseEmpty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Constructor TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=feeds.TLConstructor" json:"constructor,omitempty"`
}

func (x *ResponseEmpty) Reset() {
	*x = ResponseEmpty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_feeds_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseEmpty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseEmpty) ProtoMessage() {}

func (x *ResponseEmpty) ProtoReflect() protoreflect.Message {
	mi := &file_example_feeds_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseEmpty.ProtoReflect.Descriptor instead.
func (*ResponseEmpty) Descriptor() ([]byte, []int) {
	return file_example_feeds_proto_rawDescGZIP(), []int{10}
}

func (x *ResponseEmpty) GetConstructor() TLConstructor {
	if x != nil {
		return x.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

var File_example_feeds_proto protoreflect.FileDescriptor

var file_example_feeds_proto_rawDesc = []byte{
	0x0a, 0x13, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x66, 0x65, 0x65, 0x64, 0x73, 0x1a, 0x19, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x64, 0x0a, 0x11, 0x54, 0x4c, 0x46, 0x65, 0x65, 0x64, 0x47, 0x65,
	0x74, 0x46, 0x65, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0b, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14,
	0x2e, 0x66, 0x65, 0x65, 0x64, 0x73, 0x2e, 0x54, 0x4c, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x78, 0x0a, 0x10, 0x54, 0x4c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x36,
	0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x73, 0x2e, 0x54, 0x4c, 0x43, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x73, 0x2e, 0x46,
	0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x73, 0x22, 0x64, 0x0a, 0x11, 0x54, 0x4c, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65,
	0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x36, 0x0a, 0x0b, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14,
	0x2e, 0x66, 0x65, 0x65, 0x64, 0x73, 0x2e, 0x54, 0x4c, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x13, 0x54, 0x4c,
	0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x12, 0x36, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x73, 0x2e, 0x54,
	0x4c, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x75, 0x0a, 0x0d, 0x46, 0x65, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x73,
	0x2e, 0x54, 0x4c, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66, 0x65,
	0x65, 0x64, 0x73, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x22, 0xba, 0x01, 0x0a, 0x0d, 0x46, 0x65,
	0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70,
	0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x73, 0x2e,
	0x54, 0x4c, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x63,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x68, 0x61,
	0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x65, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x7c, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x65, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x36,
	0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x73, 0x2e, 0x54, 0x4c, 0x43, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x63, 0x0a, 0x13, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x63,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x14, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x73, 0x2e, 0x54, 0x4c, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x7e, 0x0a, 0x0b, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e,
	0x66, 0x65, 0x65, 0x64, 0x73, 0x2e, 0x54, 0x4c, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x37, 0x0a, 0x0d, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x73, 0x2e,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x6c, 0x0a, 0x0b, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x36, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x73, 0x2e, 0x54, 0x4c, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x47, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e,
	0x66, 0x65, 0x65, 0x64, 0x73, 0x2e, 0x54, 0x4c, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72,
	0x2a, 0xf3, 0x02, 0x0a, 0x0d, 0x54, 0x4c, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x52, 0x43, 0x33, 0x32, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x15, 0x43, 0x52, 0x43, 0x33, 0x32, 0x5f, 0x66,
	0x65, 0x65, 0x64, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x10, 0xc6,
	0xa2, 0xe4, 0xd0, 0x05, 0x12, 0x1c, 0x0a, 0x14, 0x43, 0x52, 0x43, 0x33, 0x32, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x10, 0xc7, 0xa2, 0xe4,
	0xd0, 0x05, 0x12, 0x1d, 0x0a, 0x15, 0x43, 0x52, 0x43, 0x33, 0x32, 0x5f, 0x66, 0x65, 0x65, 0x64,
	0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x10, 0xc8, 0xa2, 0xe4, 0xd0,
	0x05, 0x12, 0x1f, 0x0a, 0x17, 0x43, 0x52, 0x43, 0x33, 0x32, 0x5f, 0x67, 0x65, 0x74, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x10, 0xc9, 0xa2, 0xe4,
	0xd0, 0x05, 0x12, 0x1b, 0x0a, 0x13, 0x43, 0x52, 0x43, 0x33, 0x32, 0x5f, 0x66, 0x65, 0x65, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0xca, 0xa2, 0xe4, 0xd0, 0x05, 0x12,
	0x1b, 0x0a, 0x13, 0x43, 0x52, 0x43, 0x33, 0x32, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0xcb, 0xa2, 0xe4, 0xd0, 0x05, 0x12, 0x22, 0x0a, 0x1a,
	0x43, 0x52, 0x43, 0x33, 0x32, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0xcc, 0xa2, 0xe4, 0xd0, 0x05,
	0x12, 0x21, 0x0a, 0x19, 0x43, 0x52, 0x43, 0x33, 0x32, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0xcd, 0xa2,
	0xe4, 0xd0, 0x05, 0x12, 0x19, 0x0a, 0x11, 0x43, 0x52, 0x43, 0x33, 0x32, 0x5f, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x10, 0xce, 0xa2, 0xe4, 0xd0, 0x05, 0x12, 0x19,
	0x0a, 0x11, 0x43, 0x52, 0x43, 0x33, 0x32, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49,
	0x74, 0x65, 0x6d, 0x10, 0xcf, 0xa2, 0xe4, 0xd0, 0x05, 0x12, 0x1b, 0x0a, 0x13, 0x43, 0x52, 0x43,
	0x33, 0x32, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x10, 0xd0, 0xa2, 0xe4, 0xd0, 0x05, 0x32, 0x9b, 0x02, 0x0a, 0x08, 0x52, 0x50, 0x43, 0x46, 0x65,
	0x65, 0x64, 0x73, 0x12, 0x3d, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x18, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x73, 0x2e, 0x54, 0x4c, 0x46, 0x65, 0x65,
	0x64, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x66,
	0x65, 0x65, 0x64, 0x73, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x46, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x73, 0x2e, 0x54, 0x4c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x66, 0x65, 0x65, 0x64, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x52, 0x65,
	0x61, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x2e, 0x66, 0x65, 0x65, 0x64,
	0x73, 0x2e, 0x54, 0x4c, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x61, 0x64, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x1a, 0x12, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x73, 0x2e, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x66,
	0x65, 0x65, 0x64, 0x73, 0x2e, 0x54, 0x4c, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x1a, 0x1a, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x73,
	0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x42, 0x12, 0x42, 0x05, 0x46, 0x65, 0x65, 0x64, 0x73, 0x50, 0x01, 0x5a,
	0x07, 0x2e, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_example_feeds_proto_rawDescOnce sync.Once
	file_example_feeds_proto_rawDescData = file_example_feeds_proto_rawDesc
)

func file_example_feeds_proto_rawDescGZIP() []byte {
	file_example_feeds_proto_rawDescOnce.Do(func() {
		file_example_feeds_proto_rawDescData = protoimpl.X.CompressGZIP(file_example_feeds_proto_rawDescData)
	})
	return file_example_feeds_proto_rawDescData
}

var file_example_feeds_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_example_feeds_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_example_feeds_proto_goTypes = []interface{}{
	(TLConstructor)(0),           // 0: feeds.TLConstructor
	(*TLFeedGetFeedList)(nil),    // 1: feeds.TLFeedGetFeedList
	(*TLUpdateFeedList)(nil),     // 2: feeds.TLUpdateFeedList
	(*TLFeedReadHistory)(nil),    // 3: feeds.TLFeedReadHistory
	(*TLGetHistoryCounter)(nil),  // 4: feeds.TLGetHistoryCounter
	(*FeedListState)(nil),        // 5: feeds.FeedListState
	(*FeedItemState)(nil),        // 6: feeds.FeedItemState
	(*UpdateFeedListStatus)(nil), // 7: feeds.UpdateFeedListStatus
	(*HistoryCounterState)(nil),  // 8: feeds.HistoryCounterState
	(*HistoryList)(nil),          // 9: feeds.HistoryList
	(*HistoryItem)(nil),          // 10: feeds.HistoryItem
	(*ResponseEmpty)(nil),        // 11: feeds.ResponseEmpty
}
var file_example_feeds_proto_depIdxs = []int32{
	0,  // 0: feeds.TLFeedGetFeedList.constructor:type_name -> feeds.TLConstructor
	0,  // 1: feeds.TLUpdateFeedList.constructor:type_name -> feeds.TLConstructor
	6,  // 2: feeds.TLUpdateFeedList.states:type_name -> feeds.FeedItemState
	0,  // 3: feeds.TLFeedReadHistory.constructor:type_name -> feeds.TLConstructor
	0,  // 4: feeds.TLGetHistoryCounter.constructor:type_name -> feeds.TLConstructor
	0,  // 5: feeds.FeedListState.constructor:type_name -> feeds.TLConstructor
	6,  // 6: feeds.FeedListState.states:type_name -> feeds.FeedItemState
	0,  // 7: feeds.FeedItemState.constructor:type_name -> feeds.TLConstructor
	0,  // 8: feeds.UpdateFeedListStatus.constructor:type_name -> feeds.TLConstructor
	0,  // 9: feeds.HistoryCounterState.constructor:type_name -> feeds.TLConstructor
	0,  // 10: feeds.HistoryList.constructor:type_name -> feeds.TLConstructor
	10, // 11: feeds.HistoryList.history_items:type_name -> feeds.HistoryItem
	0,  // 12: feeds.HistoryItem.constructor:type_name -> feeds.TLConstructor
	0,  // 13: feeds.ResponseEmpty.constructor:type_name -> feeds.TLConstructor
	1,  // 14: feeds.RPCFeeds.GetFeedList:input_type -> feeds.TLFeedGetFeedList
	2,  // 15: feeds.RPCFeeds.UpdateFeedList:input_type -> feeds.TLUpdateFeedList
	3,  // 16: feeds.RPCFeeds.ReadHistory:input_type -> feeds.TLFeedReadHistory
	4,  // 17: feeds.RPCFeeds.GetHistoryCounter:input_type -> feeds.TLGetHistoryCounter
	5,  // 18: feeds.RPCFeeds.GetFeedList:output_type -> feeds.FeedListState
	7,  // 19: feeds.RPCFeeds.UpdateFeedList:output_type -> feeds.UpdateFeedListStatus
	9,  // 20: feeds.RPCFeeds.ReadHistory:output_type -> feeds.HistoryList
	8,  // 21: feeds.RPCFeeds.GetHistoryCounter:output_type -> feeds.HistoryCounterState
	18, // [18:22] is the sub-list for method output_type
	14, // [14:18] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_example_feeds_proto_init() }
func file_example_feeds_proto_init() {
	if File_example_feeds_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_example_feeds_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLFeedGetFeedList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_feeds_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLUpdateFeedList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_feeds_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLFeedReadHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_feeds_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLGetHistoryCounter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_feeds_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedListState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_feeds_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedItemState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_feeds_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFeedListStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_feeds_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoryCounterState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_feeds_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoryList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_feeds_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoryItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_feeds_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseEmpty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_example_feeds_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_example_feeds_proto_goTypes,
		DependencyIndexes: file_example_feeds_proto_depIdxs,
		EnumInfos:         file_example_feeds_proto_enumTypes,
		MessageInfos:      file_example_feeds_proto_msgTypes,
	}.Build()
	File_example_feeds_proto = out.File
	file_example_feeds_proto_rawDesc = nil
	file_example_feeds_proto_goTypes = nil
	file_example_feeds_proto_depIdxs = nil
}
